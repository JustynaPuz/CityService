services:
  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    container_name: eureka-server

  postgres:
    image: postgres:17.2
    container_name: city_service_platform_postgres_db
    restart: always
    env_file:
      - CityDirectoryService/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  
  city-service-1:
    build: CityDirectoryService
    container_name: city_directory_service_1
    restart: always
    depends_on:
      - postgres
      - eureka-server
    env_file:
      - CityDirectoryService/.env
    ports:
      - "8080:8080"
    environment:
      INSTANCE_NAME: city_directory_service_1
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/$POSTGRES_DB
      SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
      SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka

  city-service-2:
    build: CityDirectoryService
    container_name: city_directory_service_2
    restart: always
    depends_on:
      - postgres
      - eureka-server
    env_file:
      - CityDirectoryService/.env
    ports:
      - "8081:8080"
    environment:
      INSTANCE_NAME: city_directory_service_2
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/$POSTGRES_DB
      SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
      SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - "8088:8088"
    depends_on:
      - eureka-server
    environment:
      SERVER_PORT: 8088
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
      - "9600:9600"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:

